///////////////////////////////////////////////////////////////////////////
// Description: Data Access class for the view 'v_NguoiDungTrongNhomTruyCap'
// Generated by LLBLGen v1.21.2003.712 Final on: Monday, January 05, 2004, 11:51:16 AM
// Because the Base Class already implements IDispose, this class doesn't.
///////////////////////////////////////////////////////////////////////////
using System;
using System.Data;
using System.Data.SqlTypes;
using System.Data.SqlClient;

namespace eschoolLLBL
{
	/// <summary>
	/// Purpose: Data Access class for the view 'v_NguoiDungTrongNhomTruyCap'.
	/// </summary>
	public class V_NguoiDungTrongNhomTruyCap : DBInteractionBase
	{
		#region Class Member Declarations
			private SqlDateTime		_nGAY_TAO;
			private SqlDecimal		_iD_DON_VI, _nHOM_NGUOI_SU_DUNG_ID, _nHOM_DUOC_QUYEN_TRUY_CAP_ID, _nGUOI_SU_DUNG_ID;
			private SqlString		_mAT_KHAU, _tEN, _tEN_TRUY_CAP, _mA_PHAN_HE, _nGUOI_TAO, _tEN_NHOM, _mA_NHOM;
		#endregion


		/// <summary>
		/// Purpose: Class constructor.
		/// </summary>
		public V_NguoiDungTrongNhomTruyCap()
		{
			// Nothing for now.
		}


		/// <summary>
		/// Purpose: Insert method. This method will insert one new row into the database.
		/// </summary>
		/// <returns>True if succeeded, otherwise an Exception is thrown. </returns>
		/// <remarks>
		/// Properties needed for this method: 
		/// <UL>
		///		 <LI>TEN_TRUY_CAP. May be SqlString.Null</LI>
		///		 <LI>TEN. May be SqlString.Null</LI>
		///		 <LI>MAT_KHAU. May be SqlString.Null</LI>
		///		 <LI>NGAY_TAO. May be SqlDateTime.Null</LI>
		///		 <LI>NGUOI_TAO. May be SqlString.Null</LI>
		///		 <LI>ID_DON_VI. May be SqlDecimal.Null</LI>
		///		 <LI>TEN_NHOM. May be SqlString.Null</LI>
		///		 <LI>MA_NHOM. May be SqlString.Null</LI>
		///		 <LI>MA_PHAN_HE. May be SqlString.Null</LI>
		///		 <LI>NHOM_NGUOI_SU_DUNG_ID. May be SqlDecimal.Null</LI>
		///		 <LI>NGUOI_SU_DUNG_ID. May be SqlDecimal.Null</LI>
		///		 <LI>NHOM_DUOC_QUYEN_TRUY_CAP_ID</LI>
		/// </UL>
		/// </remarks>
		public override bool Insert()
		{
			SqlCommand	cmdToExecute = new SqlCommand();
			cmdToExecute.CommandText = "dbo.[pr_v_NguoiDungTrongNhomTruyCap_Insert]";
			cmdToExecute.CommandType = CommandType.StoredProcedure;

			// Use base class' connection object
			cmdToExecute.Connection = _mainConnection;

			try
			{
				cmdToExecute.Parameters.Add(new SqlParameter("@TEN_TRUY_CAP", SqlDbType.NVarChar, 15, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _tEN_TRUY_CAP));
				cmdToExecute.Parameters.Add(new SqlParameter("@TEN", SqlDbType.NVarChar, 255, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _tEN));
				cmdToExecute.Parameters.Add(new SqlParameter("@MAT_KHAU", SqlDbType.NVarChar, 20, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _mAT_KHAU));
				cmdToExecute.Parameters.Add(new SqlParameter("@NGAY_TAO", SqlDbType.DateTime, 8, ParameterDirection.Input, false, 23, 3, "", DataRowVersion.Proposed, _nGAY_TAO));
				cmdToExecute.Parameters.Add(new SqlParameter("@NGUOI_TAO", SqlDbType.NVarChar, 15, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _nGUOI_TAO));
				cmdToExecute.Parameters.Add(new SqlParameter("@ID_DON_VI", SqlDbType.Decimal, 9, ParameterDirection.Input, false, 18, 1, "", DataRowVersion.Proposed, _iD_DON_VI));
				cmdToExecute.Parameters.Add(new SqlParameter("@TEN_NHOM", SqlDbType.NVarChar, 255, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _tEN_NHOM));
				cmdToExecute.Parameters.Add(new SqlParameter("@MA_NHOM", SqlDbType.NVarChar, 15, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _mA_NHOM));
				cmdToExecute.Parameters.Add(new SqlParameter("@MA_PHAN_HE", SqlDbType.NVarChar, 15, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _mA_PHAN_HE));
				cmdToExecute.Parameters.Add(new SqlParameter("@NHOM_NGUOI_SU_DUNG_ID", SqlDbType.Decimal, 9, ParameterDirection.Input, false, 18, 1, "", DataRowVersion.Proposed, _nHOM_NGUOI_SU_DUNG_ID));
				cmdToExecute.Parameters.Add(new SqlParameter("@NGUOI_SU_DUNG_ID", SqlDbType.Decimal, 9, ParameterDirection.Input, false, 18, 1, "", DataRowVersion.Proposed, _nGUOI_SU_DUNG_ID));
				cmdToExecute.Parameters.Add(new SqlParameter("@NHOM_DUOC_QUYEN_TRUY_CAP_ID", SqlDbType.Decimal, 9, ParameterDirection.Input, false, 18, 1, "", DataRowVersion.Proposed, _nHOM_DUOC_QUYEN_TRUY_CAP_ID));

				if(_mainConnectionIsCreatedLocal)
				{
					// Open connection.
					_mainConnection.Open();
				}
				else
				{
					if(_mainConnectionProvider.IsTransactionPending)
					{
						cmdToExecute.Transaction = _mainConnectionProvider.CurrentTransaction;
					}
				}

				// Execute query.
				_rowsAffected = cmdToExecute.ExecuteNonQuery();
				return true;
			}
			catch(Exception ex)
			{
				// some error occured. Bubble it to caller and encapsulate Exception object
				throw new Exception("V_NguoiDungTrongNhomTruyCap::Insert::Error occured.", ex);
			}
			finally
			{
				if(_mainConnectionIsCreatedLocal)
				{
					// Close connection.
					_mainConnection.Close();
				}
				cmdToExecute.Dispose();
			}
		}


		/// <summary>
		/// Purpose: SelectAll method. This method will Select all rows from the view.
		/// </summary>
		/// <returns>DataTable object if succeeded, otherwise an Exception is thrown. </returns>
		/// <remarks>
		/// </remarks>
		public override DataTable SelectAll()
		{
			SqlCommand	cmdToExecute = new SqlCommand();
			cmdToExecute.CommandText = "dbo.[pr_v_NguoiDungTrongNhomTruyCap_SelectAll]";
			cmdToExecute.CommandType = CommandType.StoredProcedure;
			DataTable toReturn = new DataTable("v_NguoiDungTrongNhomTruyCap");
			SqlDataAdapter adapter = new SqlDataAdapter(cmdToExecute);

			// Use base class' connection object
			cmdToExecute.Connection = _mainConnection;

			try
			{

				if(_mainConnectionIsCreatedLocal)
				{
					// Open connection.
					_mainConnection.Open();
				}
				else
				{
					if(_mainConnectionProvider.IsTransactionPending)
					{
						cmdToExecute.Transaction = _mainConnectionProvider.CurrentTransaction;
					}
				}

				// Execute query.
				adapter.Fill(toReturn);
				return toReturn;
			}
			catch(Exception ex)
			{
				// some error occured. Bubble it to caller and encapsulate Exception object
				throw new Exception("V_NguoiDungTrongNhomTruyCap::SelectAll::Error occured.", ex);
			}
			finally
			{
				if(_mainConnectionIsCreatedLocal)
				{
					// Close connection.
					_mainConnection.Close();
				}
				cmdToExecute.Dispose();
				adapter.Dispose();
			}
		}


		#region Class Property Declarations
		public SqlString TEN_TRUY_CAP
		{
			get
			{
				return _tEN_TRUY_CAP;
			}
			set
			{
				SqlString tEN_TRUY_CAPTmp = (SqlString)value;
				if(tEN_TRUY_CAPTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("TEN_TRUY_CAP", "TEN_TRUY_CAP can't be NULL");
				}
				_tEN_TRUY_CAP = value;
			}
		}


		public SqlString TEN
		{
			get
			{
				return _tEN;
			}
			set
			{
				SqlString tENTmp = (SqlString)value;
				if(tENTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("TEN", "TEN can't be NULL");
				}
				_tEN = value;
			}
		}


		public SqlString MAT_KHAU
		{
			get
			{
				return _mAT_KHAU;
			}
			set
			{
				SqlString mAT_KHAUTmp = (SqlString)value;
				if(mAT_KHAUTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("MAT_KHAU", "MAT_KHAU can't be NULL");
				}
				_mAT_KHAU = value;
			}
		}


		public SqlDateTime NGAY_TAO
		{
			get
			{
				return _nGAY_TAO;
			}
			set
			{
				SqlDateTime nGAY_TAOTmp = (SqlDateTime)value;
				if(nGAY_TAOTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("NGAY_TAO", "NGAY_TAO can't be NULL");
				}
				_nGAY_TAO = value;
			}
		}


		public SqlString NGUOI_TAO
		{
			get
			{
				return _nGUOI_TAO;
			}
			set
			{
				SqlString nGUOI_TAOTmp = (SqlString)value;
				if(nGUOI_TAOTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("NGUOI_TAO", "NGUOI_TAO can't be NULL");
				}
				_nGUOI_TAO = value;
			}
		}


		public SqlDecimal ID_DON_VI
		{
			get
			{
				return _iD_DON_VI;
			}
			set
			{
				SqlDecimal iD_DON_VITmp = (SqlDecimal)value;
				if(iD_DON_VITmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("ID_DON_VI", "ID_DON_VI can't be NULL");
				}
				_iD_DON_VI = value;
			}
		}


		public SqlString TEN_NHOM
		{
			get
			{
				return _tEN_NHOM;
			}
			set
			{
				SqlString tEN_NHOMTmp = (SqlString)value;
				if(tEN_NHOMTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("TEN_NHOM", "TEN_NHOM can't be NULL");
				}
				_tEN_NHOM = value;
			}
		}


		public SqlString MA_NHOM
		{
			get
			{
				return _mA_NHOM;
			}
			set
			{
				SqlString mA_NHOMTmp = (SqlString)value;
				if(mA_NHOMTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("MA_NHOM", "MA_NHOM can't be NULL");
				}
				_mA_NHOM = value;
			}
		}


		public SqlString MA_PHAN_HE
		{
			get
			{
				return _mA_PHAN_HE;
			}
			set
			{
				SqlString mA_PHAN_HETmp = (SqlString)value;
				if(mA_PHAN_HETmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("MA_PHAN_HE", "MA_PHAN_HE can't be NULL");
				}
				_mA_PHAN_HE = value;
			}
		}


		public SqlDecimal NHOM_NGUOI_SU_DUNG_ID
		{
			get
			{
				return _nHOM_NGUOI_SU_DUNG_ID;
			}
			set
			{
				SqlDecimal nHOM_NGUOI_SU_DUNG_IDTmp = (SqlDecimal)value;
				if(nHOM_NGUOI_SU_DUNG_IDTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("NHOM_NGUOI_SU_DUNG_ID", "NHOM_NGUOI_SU_DUNG_ID can't be NULL");
				}
				_nHOM_NGUOI_SU_DUNG_ID = value;
			}
		}


		public SqlDecimal NGUOI_SU_DUNG_ID
		{
			get
			{
				return _nGUOI_SU_DUNG_ID;
			}
			set
			{
				SqlDecimal nGUOI_SU_DUNG_IDTmp = (SqlDecimal)value;
				if(nGUOI_SU_DUNG_IDTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("NGUOI_SU_DUNG_ID", "NGUOI_SU_DUNG_ID can't be NULL");
				}
				_nGUOI_SU_DUNG_ID = value;
			}
		}


		public SqlDecimal NHOM_DUOC_QUYEN_TRUY_CAP_ID
		{
			get
			{
				return _nHOM_DUOC_QUYEN_TRUY_CAP_ID;
			}
			set
			{
				SqlDecimal nHOM_DUOC_QUYEN_TRUY_CAP_IDTmp = (SqlDecimal)value;
				if(nHOM_DUOC_QUYEN_TRUY_CAP_IDTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("NHOM_DUOC_QUYEN_TRUY_CAP_ID", "NHOM_DUOC_QUYEN_TRUY_CAP_ID can't be NULL");
				}
				_nHOM_DUOC_QUYEN_TRUY_CAP_ID = value;
			}
		}
		#endregion
	}
}

' //////////////////////////////////////////////////////////////////////////////////////////
' // Description: Base class for Database Interaction.                       
' // Generated by LLBLGen v1.21.2003.712 Final on: Thursday, April 15, 2004, 10:31:38 AM
' // Because this class implements IDisposable, derived classes shouldn't do so.
' //////////////////////////////////////////////////////////////////////////////////////////
Imports System
Imports System.Configuration
Imports System.Data
Imports System.Data.SqlClient
Imports System.Data.SqlTypes

Namespace eschoolLLBL
	' /// <summary>
	' /// Purpose: Error Enums used by this LLBL library.
	' /// </summary>
	Public Enum LLBLError
		AllOk
		' // Add more here (check the comma's!)
	End Enum


	' /// <summary>
	' /// Purpose: General interface of the API generated. Contains only common methods of all classes.
	' /// </summary>
	Public Interface ICommonDBAccess
		Function	Insert() As Boolean
		Function	Update() As Boolean
		Function	Delete() As Boolean
		Function	SelectOne() As DataTable
		Function	SelectAll() As DataTable
	End Interface


	' /// <summary>
	' /// Purpose: Abstract base class for Database Interaction classes.
	' /// </summary>
	Public MustInherit Class DBInteractionBase
		Implements IDisposable
		Implements ICommonDBAccess

#Region " Class Member Declarations "

		Protected	_mainConnection As SqlConnection
		Protected	_rowsAffected As Integer
		Protected	_mainConnectionIsCreatedLocal As Boolean
		Protected	_mainConnectionProvider As ConnectionProvider
		Private		_isDisposed As Boolean

#End Region


		' /// <summary>
		' /// Purpose: Class constructor.
		' /// </summary>
		Public Sub New()
			' // Initialize the class' members.
			InitClass()
		End Sub


		' /// <summary>
		' /// Purpose: Initializes class members.
		' /// </summary>
		Private Sub InitClass()
			' // create all the objects and initialize other members.
			_mainConnection = new SqlConnection()
			_mainConnectionIsCreatedLocal = True
			_mainConnectionProvider = Nothing
			Dim _configReader As AppSettingsReader = new AppSettingsReader()

			' // Set connection string of the sqlconnection object
			_mainConnection.ConnectionString = _configReader.GetValue("Main.ConnectionString", "".GetType()).ToString()
			_isDisposed = False
		End Sub


		' /// <summary>
		' /// Purpose: Implements the IDispose' method Dispose.
		' /// </summary>
		Overloads Public Sub Dispose() Implements IDisposable.Dispose
			Dispose(True)
			GC.SuppressFinalize(Me)
		End Sub


		' /// <summary>
		' /// Purpose: Implements the Dispose functionality.
		' /// </summary>
		Overridable  Overloads Protected Sub Dispose(ByVal isDisposing As Boolean)
			' // Check to see if Dispose has already been called.
			If Not _isDisposed Then
				If isDisposing Then
					' // Dispose managed resources.
					If _mainConnectionIsCreatedLocal Then
						' // Object is created in this class, so destroy it here.
						_mainConnection.Close()
						_mainConnection.Dispose()
						_mainConnectionIsCreatedLocal = True
					End If
					_mainConnectionProvider = Nothing
					_mainConnection = Nothing
				End If
			End If
			_isDisposed = True
		End Sub


		' /// <summary>
		' /// Purpose: Implements the ICommonDBAccess.Insert() method.
		' /// </summary>
		Public Overridable Function Insert() As Boolean Implements ICommonDBAccess.Insert
			' // No implementation, throw exception
			Throw New NotImplementedException()
		End Function


		' /// <summary>
		' /// Purpose: Implements the ICommonDBAccess.Delete() method.
		' /// </summary>
		Public Overridable Function Delete() As Boolean Implements ICommonDBAccess.Delete
			' // No implementation, throw exception
			Throw New NotImplementedException()
		End Function


		' /// <summary>
		' /// Purpose: Implements the ICommonDBAccess.Update() method.
		' /// </summary>
		Public Overridable Function Update() As Boolean Implements ICommonDBAccess.Update
			' // No implementation, throw exception
			Throw New NotImplementedException()
		End Function


		' /// <summary>
		' /// Purpose: Implements the ICommonDBAccess.SelectOne() method.
		' /// </summary>
		Public Overridable Function SelectOne() As DataTable Implements ICommonDBAccess.SelectOne
			' // No implementation, throw exception
			Throw New NotImplementedException()
		End Function


		' /// <summary>
		' /// Purpose: Implements the ICommonDBAccess.SelectAll() method.
		' /// </summary>
		Public Overridable Function SelectAll() As DataTable Implements ICommonDBAccess.SelectAll
			' // No implementation, throw exception
			Throw New NotImplementedException()
		End Function


#Region " Class Property Declarations "

		Public WriteOnly Property MainConnectionProvider() As ConnectionProvider
			Set(ByVal Value As ConnectionProvider)
				If Value Is Nothing Then
					' // Invalid value
					Throw New ArgumentNullException("MainConnectionProvider", "Nothing passed as value to this property which is not allowed.")
				End If

				' // A connection provider object is passed to this class.
				' // Retrieve the SqlConnection object, if present and create a
				' // reference to it. If there is already a MainConnection object
				' // referenced by the membervar, destroy that one or simply 
				' // remove the reference, based on the flag.
				If Not (_mainConnection Is Nothing) Then
					' // First get rid of current connection object. Caller is responsible
					If _mainConnectionIsCreatedLocal Then
						' // Is local created object, close it and dispose it.
						_mainConnection.Close()
						_mainConnection.Dispose()
					End If
					' // Remove reference.
					_mainConnection = Nothing
				End If
				_mainConnectionProvider = CType(Value, ConnectionProvider)
				_mainConnection = _mainConnectionProvider.DBConnection
				_mainConnectionIsCreatedLocal = False
			End Set
		End Property


		Public Readonly Property RowsAffected() As Integer
			Get
				Return _rowsAffected
			End Get
		End Property

#End Region

	End Class
End Namespace

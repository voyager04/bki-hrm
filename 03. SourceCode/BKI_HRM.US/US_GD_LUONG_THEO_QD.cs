///************************************************
/// Generated by: DucVT
/// Date: 10/09/2014 02:38:59
/// Goal: Create User Service Class for GD_LUONG_THEO_QD
///************************************************
/// <summary>
/// Create User Service Class for GD_LUONG_THEO_QD
/// </summary>

using System;
using BKI_HRM.DS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;



namespace BKI_HRM.US
{

    public class US_GD_LUONG_THEO_QD : US_Object
    {
        private const string c_TableName = "GD_LUONG_THEO_QD";
        #region "Public Properties"
        public decimal dcID
        {
            get
            {
                return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
            }
            set
            {
                pm_objDR["ID"] = value;
            }
        }

        public bool IsIDNull()
        {
            return pm_objDR.IsNull("ID");
        }

        public void SetIDNull()
        {
            pm_objDR["ID"] = System.Convert.DBNull;
        }

        public string strMA_NV
        {
            get
            {
                return CNull.RowNVLString(pm_objDR, "MA_NV", IPConstants.c_DefaultString);
            }
            set
            {
                pm_objDR["MA_NV"] = value;
            }
        }

        public bool IsMA_NVNull()
        {
            return pm_objDR.IsNull("MA_NV");
        }

        public void SetMA_NVNull()
        {
            pm_objDR["MA_NV"] = System.Convert.DBNull;
        }

        public string strMA_KY
        {
            get
            {
                return CNull.RowNVLString(pm_objDR, "MA_KY", IPConstants.c_DefaultString);
            }
            set
            {
                pm_objDR["MA_KY"] = value;
            }
        }

        public bool IsMA_KYNull()
        {
            return pm_objDR.IsNull("MA_KY");
        }

        public void SetMA_KYNull()
        {
            pm_objDR["MA_KY"] = System.Convert.DBNull;
        }

        public string strMA_QD
        {
            get
            {
                return CNull.RowNVLString(pm_objDR, "MA_QD", IPConstants.c_DefaultString);
            }
            set
            {
                pm_objDR["MA_QD"] = value;
            }
        }

        public bool IsMA_QDNull()
        {
            return pm_objDR.IsNull("MA_QD");
        }

        public void SetMA_QDNull()
        {
            pm_objDR["MA_QD"] = System.Convert.DBNull;
        }

        public decimal dcLUONG
        {
            get
            {
                return CNull.RowNVLDecimal(pm_objDR, "LUONG", IPConstants.c_DefaultDecimal);
            }
            set
            {
                pm_objDR["LUONG"] = value;
            }
        }

        public bool IsLUONGNull()
        {
            return pm_objDR.IsNull("LUONG");
        }

        public void SetLUONGNull()
        {
            pm_objDR["LUONG"] = System.Convert.DBNull;
        }

        public DateTime datNGAY_AP_DUNG
        {
            get
            {
                return CNull.RowNVLDate(pm_objDR, "NGAY_AP_DUNG", IPConstants.c_DefaultDate);
            }
            set
            {
                pm_objDR["NGAY_AP_DUNG"] = value;
            }
        }

        public bool IsNGAY_AP_DUNGNull()
        {
            return pm_objDR.IsNull("NGAY_AP_DUNG");
        }

        public void SetNGAY_AP_DUNGNull()
        {
            pm_objDR["NGAY_AP_DUNG"] = System.Convert.DBNull;
        }

        public decimal dcTHANG_AP_DUNG
        {
            get
            {
                return CNull.RowNVLDecimal(pm_objDR, "THANG_AP_DUNG", IPConstants.c_DefaultDecimal);
            }
            set
            {
                pm_objDR["THANG_AP_DUNG"] = value;
            }
        }

        public bool IsTHANG_AP_DUNGNull()
        {
            return pm_objDR.IsNull("THANG_AP_DUNG");
        }

        public void SetTHANG_AP_DUNGNull()
        {
            pm_objDR["THANG_AP_DUNG"] = System.Convert.DBNull;
        }

        public decimal dcNAM_AP_DUNG
        {
            get
            {
                return CNull.RowNVLDecimal(pm_objDR, "NAM_AP_DUNG", IPConstants.c_DefaultDecimal);
            }
            set
            {
                pm_objDR["NAM_AP_DUNG"] = value;
            }
        }

        public bool IsNAM_AP_DUNGNull()
        {
            return pm_objDR.IsNull("NAM_AP_DUNG");
        }

        public void SetNAM_AP_DUNGNull()
        {
            pm_objDR["NAM_AP_DUNG"] = System.Convert.DBNull;
        }

        public string strLUONG_HIEN_TAI_YN
        {
            get
            {
                return CNull.RowNVLString(pm_objDR, "LUONG_HIEN_TAI_YN", IPConstants.c_DefaultString);
            }
            set
            {
                pm_objDR["LUONG_HIEN_TAI_YN"] = value;
            }
        }

        public bool IsLUONG_HIEN_TAI_YNNull()
        {
            return pm_objDR.IsNull("LUONG_HIEN_TAI_YN");
        }

        public void SetLUONG_HIEN_TAI_YNNull()
        {
            pm_objDR["LUONG_HIEN_TAI_YN"] = System.Convert.DBNull;
        }

        #endregion
        
        #region "Init Functions"
        public US_GD_LUONG_THEO_QD()
        {
            pm_objDS = new DS_GD_LUONG_THEO_QD();
            pm_strTableName = c_TableName;
            pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
        }

        public US_GD_LUONG_THEO_QD(DataRow i_objDR)
            : this()
        {
            this.DataRow2Me(i_objDR);
        }

        public US_GD_LUONG_THEO_QD(decimal i_dbID)
        {
            pm_objDS = new DS_GD_LUONG_THEO_QD();
            pm_strTableName = c_TableName;
            IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
            v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
            SqlCommand v_cmdSQL;
            v_cmdSQL = v_objMkCmd.getSelectCmd();
            this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
            pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
        }
        #endregion

    }
}
